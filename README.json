{
  "title": "前端观察",
  "description": "一步一步向前",
  "data": {
    "total": 3,
    "data": [
      {
        "id": 3,
        "title": "可视化拖拽组件",
        "createdAt": "2020.12.28",
        "editor": "Zero",
        "content": {
          "top": {
            "title": "🔥 本周置顶",
            "data": [
              {
                "name": "可视化拖拽组件库一些技术要点原理分析",
                "url": "https://juejin.cn/post/6908502083075325959",
                "author": {
                  "platform": "掘金",
                  "column": "谭光志",
                  "person": "谭光志"
                },
                "summary": "从 0 到 1，方位讲解可视化拖拽组件库核心技术，这可能是 LowCode 的一个关键步骤",
                "tags": [
                  "可视化",
                  "LowCode",
                  "DND"
                ]
              }
            ]
          },
          "article": {
            "title": "📘 技术文章",
            "data": [
              {
                "name": "EMP 微前端解决方案",
                "url": "https://mp.weixin.qq.com/s/l0-uCLFRcBBrs4yTiAvryg",
                "author": {
                  "platform": "微信",
                  "column": "前端早读课",
                  "person": "吉古力"
                },
                "summary": "一个新的微前端解决方案，引入 Webpack5 Module Federation，注重生态建设",
                "tags": [
                  "微前端"
                ]
              },
              {
                "name": "一文详细讲解API网关核心功能和API管理扩展",
                "url": "https://mp.weixin.qq.com/s/xDFvXDbyTpX3ldddYTLiig",
                "author": {
                  "platform": "微信",
                  "column": "分布式实验室",
                  "person": "何明璐"
                },
                "summary": "详细讲解API网关的基础概念，使用场景和核心功能，以及基于API网关核心引擎做的API全生命周期管理功能扩展等，最后介绍当前主流的开源API网关引擎",
                "tags": [
                  "ApiGateway",
                  "API"
                ]
              },
              {
                "name": "从 Context 源码实现谈 React 性能优化",
                "url": "https://mp.weixin.qq.com/s/e8_2Ka06nUtvmYYBeHw_vA",
                "author": {
                  "platform": "微信",
                  "column": "前端大全",
                  "person": "卡颂"
                },
                "summary": "了解Context的实现原理，源码层面掌握React组件的render时机，从而写出高性能的React组件；源码层面了解shouldComponentUpdate、React.memo、PureComponent等性能优化手段的实现",
                "tags": [
                  "React"
                ]
              },
              {
                "name": "Canvas入门实战之实现一个图形验证码",
                "url": "https://mp.weixin.qq.com/s/KRDmD5RhYtaaGxykCt6jbQ",
                "author": {
                  "platform": "微信",
                  "column": "趣谈前端",
                  "person": "徐小夕"
                },
                "summary": "用canvas实现图形验证码的一些思路以及如何用javascript面向对象的方式更友好的实现canvas的功能",
                "tags": [
                  "Canvas",
                  "验证码"
                ]
              },
              {
                "name": "JAMstack 简介",
                "url": "https://snipcart.com/blog/jamstack",
                "author": {
                  "platform": "Snipcart",
                  "column": "Snipcart",
                  "person": "Snipcart"
                },
                "summary": "一文了解什么是 JAMstack 以及如何使用 JAMstack 开始你的项目",
                "tags": [
                  "JAMstack"
                ]
              },
              {
                "name": "useRef 完全指南",
                "url": "https://www.giovannibenussi.com/blog/a-complete-guide-to-useref/?id=1",
                "author": {
                  "platform": "giovannibenussi",
                  "column": "giovannibenussi",
                  "person": "giovannibenussi"
                },
                "summary": "useRef 你用对了吗？集中注意，专攻 useRef",
                "tags": [
                  "Hooks"
                ]
              },
              {
                "name": "从业18年，我总结了9个最有价值的经验",
                "url": "https://mp.weixin.qq.com/s/2G2kt_HL4Vah1XID6CMohA",
                "author": {
                  "platform": "微信",
                  "column": "InfoQ",
                  "person": "张健欣（译）"
                },
                "summary": "作者从 14 岁开始写代码，到如今已有 18 年，文中他分享了一些经历，并总结了 9 个经验教训",
                "tags": [
                  "经验"
                ]
              },
              {
                "name": "关于中台的思考和尝试",
                "url": "https://mp.weixin.qq.com/s/qzvf4wZCDfHvATdz7KAgSg",
                "author": {
                  "platform": "微信",
                  "column": "InfoQ",
                  "person": "郭东白"
                },
                "summary": "围绕中台的争议非常多，但是往往争议的原因是连中台这个概念都完全没有达成共识，可以说是毫无意义的争吵。",
                "tags": [
                  "中台"
                ]
              },
              {
                "name": "根据网络和设备状态来加载图片",
                "url": "https://css-tricks.com/optimize-images-according-to-network-and-device-constraints-in-react/",
                "author": {
                  "platform": "掘金",
                  "column": "大帅搞全栈",
                  "person": "大帅搞全栈"
                },
                "summary": "前端性能优化，图片加载性能优化的新思路",
                "tags": [
                  "性能优化"
                ]
              },
              {
                "name": "React 事件系统工作原理",
                "url": "https://juejin.cn/post/6909271104440205326",
                "author": {
                  "platform": "掘金",
                  "column": "网易云音乐大前端团队",
                  "person": "江水"
                },
                "summary": "在 React事件介绍 中介绍了合成事件对象以及为什么提供合成事件对象，主要原因是因为 React 想实现一个全浏览器的框架， 为了实现这种目标就需要提供全浏览器一致性的事件系统，以此抹平不同浏览器的差异。但是合成事件是如何实现的呢？",
                "tags": [
                  "React",
                  "合成事件"
                ]
              },
              {
                "name": "React RFC Server Components是什么，有啥用",
                "url": "https://juejin.cn/post/6909265655392894989",
                "author": {
                  "platform": "微信",
                  "column": "卡颂",
                  "person": "卡颂"
                },
                "summary": "12月21日，React团队公布了一个新的提案Server Components。伴随这个提案同时发出的，还有一个小时的视频讲解、可供运行的Demo、详尽的介绍。",
                "tags": [
                  "React"
                ]
              },
              {
                "name": "V8 引擎垃圾回收与内存分配",
                "url": "https://mp.weixin.qq.com/s?__biz=MzI0NTE5NzYyMw==&mid=2247484919&idx=1&sn=a748fc841488d9afb15633e0046bea66&scene=21#wechat_redirect",
                "author": {
                  "platform": "微信",
                  "column": "政采云前端团队",
                  "person": "九渊"
                },
                "summary": "工欲善其事，必先利其器，本文之器非器具之器，乃容器也，言归正传，作为一个前端打工人，左手刚 const 定义常量，忠贞不二，转头就 new 几个对象，玩的火热，真是个优秀的 jser，风骚的操作背后，必有日夜不辍的 QWER，外加一个走 A，废话不多说，浏览器内核是啥玩意？还不知道都有啥浏览器内核？那就先来看看浏览器内核。",
                "tags": [
                  "V8"
                ]
              },
              {
                "name": "跨端框架的核心技术到底是什么？",
                "url": "https://mp.weixin.qq.com/s?__biz=MzI4OTU0NTU1NA==&mid=2247484851&idx=1&sn=0d79797b86e27f6694a23a1ee0289a79&scene=21#wechat_redirect",
                "author": {
                  "platform": "掘金",
                  "column": "卤蛋实验室",
                  "person": "卤代烃"
                },
                "summary": "作者把各个跨端技术提炼为为虚拟机和渲染引擎技术，然后以这两个核心技术的角度去拆解各个跨端方案。一旦概念理清，在面对性能调优等技术场景时，就能抓住主要矛盾，更快更好的发现问题，解决问题。",
                "tags": [
                  "跨端框架"
                ]
              },
              {
                "name": "使用 Lottie 快速开发动画",
                "url": "https://mp.weixin.qq.com/s/KTyni7PjzY7FZQgwkU1eUA",
                "author": {
                  "platform": "微信",
                  "column": "前端早读课",
                  "person": "京东用户体验设计"
                },
                "summary": "Lottie 是一个跨平台的动画库。设计小姐姐使用 AE 制作并导出的动画文件（ json 格式），Lottie 可以在各个终端快速解析这个 json 文件，从而还原动画，简单快速。",
                "tags": [
                  "Lottie"
                ]
              },
              {
                "name": "钉钉表格，从零到一打造在线 Excel",
                "url": "https://mp.weixin.qq.com/s/NiseW0URtcj5HSPcCltZWw",
                "author": {
                  "platform": "微信",
                  "column": "前端早读课",
                  "person": "叶斋"
                },
                "summary": "这款产品经过了接近一年的从 0 到 1 的研发，已经完成了 Excel 70% 的功能点，即将正式推出。这次的分享，我将从前端的视角，来谈谈研发这款产品中遇到的一些技术挑战，以及我们的应对策略。",
                "tags": [
                  "Excel"
                ]
              },
              {
                "name": "漫谈 React Fiber",
                "url": "https://www.zhihu.com/column/p/337275795",
                "author": {
                  "platform": "掘金",
                  "column": "网易云音乐大前端团队",
                  "person": "葛星"
                },
                "summary": "Virtual DOM 已经是一个老生常谈的话题了，在深水前端的现在，更需要了解的是 Virtual DOM 底层的 Fiber Diff 实现",
                "tags": [
                  "React",
                  "Fiber"
                ]
              }
            ]
          },
          "library": {
            "title": "🛠 工具类库",
            "data": [
              {
                "name": "craft.js",
                "url": "https://github.com/prevwong/craft.js",
                "description": "生成拖拽页面编辑器的框架，快速构建可拖拽的页面",
                "language": "TypeScript",
                "tags": [
                  "LowCode",
                  "DND"
                ]
              },
              {
                "name": "npm-unpkg",
                "url": "https://github.com/uiwjs/npm-unpkg",
                "description": "查看 NPM 包文件结构 Web 应用，基于 unpkg 接口数据实现",
                "language": "TypeScript",
                "tags": [
                  "NPM",
                  "UNPKG"
                ]
              },
              {
                "name": "redwood",
                "url": "https://github.com/redwoodjs/redwood",
                "description": "符合 JAMStack 规范的全栈应用框架",
                "language": "JavaScript",
                "tags": [
                  "JAMstack"
                ]
              },
              {
                "name": "squoosh",
                "url": "https://github.com/GoogleChromeLabs/squoosh",
                "description": "基于浏览器端的图片优化工具，支持尺寸缩放、体积压缩、格式转化，可以代替 tinypng，支持 jpg, png, webp, avif 等",
                "language": "TypeScript",
                "tags": [
                  "Image"
                ]
              },
              {
                "name": "act",
                "url": "https://github.com/nektos/act",
                "description": "让 Github Actions 在本地执行的命令行工具",
                "language": "Go",
                "tags": [
                  "GithubActions",
                  "CLI"
                ]
              },
              {
                "name": "idea-css",
                "url": "https://github.com/JowayYoung/idea-css",
                "description": "基于纯 CSS 开发的创意 CSS 特效应用",
                "language": "CSS",
                "tags": []
              },
              {
                "name": "owncast",
                "url": "https://github.com/owncast/owncast",
                "description": "一个可以自己搭建的开源流媒体服务，用作视频的在线播放",
                "language": "Go",
                "tags": [
                  "流媒体"
                ]
              },
              {
                "name": "js-data",
                "url": "https://github.com/js-data/js-data",
                "description": "一个 JavaScript ORM 框架，独特的 DataStore 设计，在浏览器端像操作数据库一样操作数据",
                "language": "JavaScript",
                "tags": [
                  "Data",
                  "DataStore"
                ]
              },
              {
                "name": "webpack-retry-chunk-load-plugin",
                "url": "https://github.com/mattlewis92/webpack-retry-chunk-load-plugin",
                "description": "重试插件，解决 Load Chunk Failed 问题",
                "language": "JavaScript",
                "tags": [
                  "Webpack",
                  "Retry"
                ]
              },
              {
                "name": "uView",
                "url": "https://github.com/YanxinNet/uView",
                "description": "uni-app 生态优秀的 UI 框架，全面的组件和便捷的工具会让您信手拈来，如鱼得水",
                "language": "Vue",
                "tags": [
                  "Uniapp"
                ]
              },
              {
                "name": "grant",
                "url": "https://github.com/YanxinNet/uView",
                "description": "OAuth2 代理库，支持超过 200 个第三方认证，支持 Express, Koa, Hapi, Fastify 等框架，并且提供了在线调试 AuthPlayground，体验很棒",
                "language": "JavaScript",
                "tags": [
                  "Auth",
                  "OAuth2"
                ]
              }
            ]
          }
        }
      },
      {
        "id": 2,
        "title": "滴滴 NodeX 生态",
        "createdAt": "2020.12.21",
        "editor": "Zero",
        "content": {
          "top": {
            "title": "🔥 本周置顶",
            "data": [
              {
                "name": "滴滴 NodeX 生态",
                "url": "https://mp.weixin.qq.com/s/x62tkL5bUgbBaRyNwRgxNw",
                "author": {
                  "platform": "微信",
                  "column": "Nodejs技术栈",
                  "person": "祝云凌"
                },
                "summary": "为了让我们历史沉淀的经验能够在集团内铸就更大的价值，并且能够更加完善滴滴Node生态，所以我们成立了NodeX 跨团队 FT，致力于打造滴滴内集团级的专业、高效、稳定的Node研发体系",
                "tags": [
                  "技术架构",
                  "研发体系"
                ]
              }
            ]
          },
          "article": {
            "title": "📘 技术文章",
            "data": [
              {
                "name": "提升网站的加载速度，你选择 Brotli 还是 Gzip？",
                "url": "https://mp.weixin.qq.com/s/1gzpjpbcseYXEF5pvgt7nw",
                "author": {
                  "platform": "微信",
                  "column": "前端之颠",
                  "person": "王强（译）"
                },
                "summary": "我们大家经常会使用各种压缩方法来提高 Web 应用程序的性能，而 Gzip 是其中最受欢迎的一种。最近，另一种名为 Brotli 的压缩方法开始引起了人们的关注，它似乎已成为了 Gzip 的有力竞争对手。",
                "tags": [
                  "CDN",
                  "Gzip"
                ]
              },
              {
                "name": "在线 Excel 项目到底有多刺激",
                "url": "https://mp.weixin.qq.com/s/f1vwzuPryc8ag6nd5Ngr5A",
                "author": {
                  "platform": "微信",
                  "column": "腾讯技术工程",
                  "person": "被删"
                },
                "summary": "在线 Excel 的研发并没有像使用那么简单，实时协同编辑是一个巨大挑战，更大的挑战是每个格子都是一个富文本编辑器。",
                "tags": [
                  "协同",
                  "Excel",
                  "富文本编辑器"
                ]
              },
              {
                "name": "LowCode 平台设计原则",
                "url": "https://github.com/phodal/lowcode",
                "author": {
                  "platform": "Github",
                  "column": "Phodal",
                  "person": "Phodal"
                },
                "summary": "无代码/低代码是一种创建应用的方法，它可以让开发人员使用最少的编码知识，来快速开发应用程序。它可以在图形界面中，使用可视化建模的方式，来组装和配置应用程序。开发人员可以直接跳过所有的基础架构，只关注于使用代码来实现业务逻辑。",
                "tags": [
                  "LowCode"
                ]
              },
              {
                "name": "构建下一代 HTTP API - 零成本抽象做输入输出的校验和正规化",
                "url": "https://mp.weixin.qq.com/s/7qBjJqBbMWIRQxcrIxfigg",
                "author": {
                  "platform": "微信",
                  "column": "程序人生",
                  "person": "陈小天"
                },
                "summary": "计算机领域有句大俗话，是：Garbage in, garbage out，垃圾进，垃圾出。如果将错误的，无意义的数据输入给一个系统，你也将会得到错误的结果。软件架构领域的先驱者 Mary Shaw 在她的《软件架构》一书里提到，一个系统只有 10% 的代码用于其看得见的目的，而剩下的逻辑都花在处理输入输出，数据校验，数据结构的维护和其它的琐事。",
                "tags": [
                  "API",
                  "标准化",
                  "数据校验"
                ]
              },
              {
                "name": "图解跨域请求、反向代理原理，对前端更友好的反向代理服务器 - Caddy",
                "url": "https://mp.weixin.qq.com/s/SbYD9QrSEoDw7MJkQeE1ww",
                "author": {
                  "platform": "微信",
                  "column": "程序员成长指北",
                  "person": "晒兜斯"
                },
                "summary": "Caddy 是唯一一个在默认情况下自动使用 HTTPS 的 Web 服务器，可以用来完成跨域请求、反向代理、静态文件服务器、部署 History SPA 应用、负载均衡等等功能，在可读性、可维护性和易用性方面都做的很好，对前端更友好！",
                "tags": [
                  "反向代理",
                  "负载均衡"
                ]
              },
              {
                "name": "开个通用的 HTTP 接口，让前端写 SQL 咋样?",
                "url": "https://zhuanlan.zhihu.com/p/337185052",
                "author": {
                  "platform": "知乎",
                  "column": "taowen",
                  "person": "陶文"
                },
                "summary": "如何让前端程序员没有后端也能完成项目? 简单概述了 Backend as a \"Database\"。对于前端怎么查询后端并没有详细展开。那么后端是不是应该开个通用的 HTTP 接口，这样前端同学直接写 SQL 就好了呢？最近有一个开源项目 Tencent/APIJSON 就是这么搞的。GraphQL 其实也是差不多...",
                "tags": [
                  "API",
                  "SQL",
                  "GraphQL"
                ]
              },
              {
                "name": "使用 CSS Scroll Snap 实现可吸附的滑动容器",
                "url": "https://ishadeed.com/article/css-scroll-snap/",
                "author": {
                  "platform": "掘金",
                  "column": "凹凸实验室",
                  "person": "ishadeed"
                },
                "summary": "在幻灯片、电话簿、地址簿等场景下常常用到滚动吸附的场景，往往组件都是通过 JS 计算位置然后使用固定或者绝对定位实现，为什么不试试早已成熟的 CSS Scroll Snap 呢？",
                "tags": [
                  "CSS",
                  "吸附"
                ]
              },
              {
                "name": "Figma + Gitlab CI 一键交付 SVG 多色图标库",
                "url": "https://mp.weixin.qq.com/s/-aWtVV3nnig_-kHW2h2Pcg",
                "author": {
                  "platform": "微信",
                  "column": "前端早读课",
                  "person": "印记中文团队"
                },
                "summary": "Figma 设计稿中时常有多达上百个 Icon，按照之前的流程，我们需要将图标⼀个个从 Figma 导出，拷⻉⾄项⽬⾥，并对图标代码依次做⼀些改造，以⽀持⼀些定制的功能（如更换颜⾊等），流程冗⻓⽽复杂。在后续的更新维护时，我们每次都需要与设计师核对 icon 的增减修改，并对所有更新的 icon 重复上述流程。这显然不是一个高效可持续的合作方式。",
                "tags": [
                  "Icon",
                  "Figma",
                  "Gitlab"
                ]
              },
              {
                "name": "谷歌 CSP 工程化实践导读",
                "url": "https://mp.weixin.qq.com/s/YOpb8x-3Lp_WomRu-p1dIw",
                "author": {
                  "platform": "微信",
                  "column": "前端瓶子君",
                  "person": "Wester"
                },
                "summary": "内容安全策略（Content Security Policy, 以下简称CSP）是业界主推的前端安全纵深防御方案。针对XSS漏洞及其他前端安全风险，其显著效果，已经在广泛应用中证实。作为CSP规范的核心制定与实践者之一，Google团队在今年的HITB安全会议上进行了题为《A Successful Mess Between Hardening and Mitigation》的分享，其中呈现的数据与经验颇具参考意义。",
                "tags": [
                  "CSP",
                  "前端安全",
                  "XSS"
                ]
              },
              {
                "name": "Vue仿探探拖拽卡片的效果",
                "url": "https://juejin.cn/post/6906143905922678797",
                "author": {
                  "platform": "掘金",
                  "column": "大帅搞全栈",
                  "person": "大帅搞全栈"
                },
                "summary": "类似Tinder和探探的卡片效果的组件，社区中已经非常多了。我这一版除了可以实现和他们一样的效果外。还增加了飞卡的效果，就是类似我的女神邱淑贞这样。可以将卡片朝任意拖拽方向飞出去，必须得帅是不是！",
                "tags": [
                  "CSS",
                  "Animation"
                ]
              }
            ]
          },
          "library": {
            "title": "🛠 工具类库",
            "data": [
              {
                "name": "cleave.js",
                "url": "https://github.com/nosir/cleave.js",
                "description": "Web 表单开发之实时输入格式化显示，在输入银行卡、信用卡、金额等场景，实现简单但效果不错",
                "language": "JavaScript",
                "tags": [
                  "格式化"
                ]
              },
              {
                "name": "directus",
                "url": "https://github.com/directus/directus",
                "description": "开源数据平台（Data Platform），类似 Hasura / Firebase，更棒的是它做了完善的 SDK，开发起来就像小程序云开发",
                "language": "TypeScript",
                "tags": [
                  "Data",
                  "SDK"
                ]
              },
              {
                "name": "kityminder",
                "url": "https://github.com/fex-team/kityminder",
                "description": "百度脑图 - 在线的脑图编辑工具",
                "language": "JavaScript",
                "tags": [
                  "脑图"
                ]
              },
              {
                "name": "farrow",
                "url": "https://github.com/Lucifier129/farrow",
                "description": "函数式风格的 Web 框架，强类型",
                "language": "TypeScript",
                "tags": [
                  "Web",
                  "Functional"
                ]
              },
              {
                "name": "meli",
                "url": "https://github.com/getmeli/meli",
                "description": "开源的静态网站和前端应用部署平台",
                "language": "TypeScript",
                "tags": [
                  "Deploy",
                  "发布系统"
                ]
              },
              {
                "name": "excalidraw",
                "url": "https://github.com/excalidraw/excalidraw",
                "description": "一个草稿白板（Whiteboard），适合头脑风暴，这样就不用画笔了",
                "language": "TypeScript",
                "tags": []
              },
              {
                "name": "jssh",
                "url": "https://github.com/leizongmin/jssh",
                "description": "一款使用JS编写命令行小工具的神器",
                "language": "Go",
                "tags": [
                  "CLI"
                ]
              },
              {
                "name": "json5",
                "url": "https://github.com/json5/json5",
                "description": "面向 Human 的更友好的 JSON 解析实现，支持 JSON 注释 + 键名无引号 + 尾逗号，更像 JavaScript 对象",
                "language": "JavaScript",
                "tags": [
                  "JSON"
                ]
              },
              {
                "name": "zsh-nvm",
                "url": "https://github.com/lukechilds/zsh-nvm",
                "description": "安装、升级、加载 NVM 的 ZSH 插件",
                "language": "Shell",
                "tags": [
                  "ZSH",
                  "NVM"
                ]
              },
              {
                "name": "APIJSON",
                "url": "https://github.com/Tencent/APIJSON",
                "description": "按需返回指定的 JSON 数据，后端接口和文档自动化，类 GraphQL 面向 UI 按需取数的特性",
                "language": "Java",
                "tags": [
                  "API"
                ]
              }
            ]
          }
        }
      },
      {
        "id": 1,
        "title": "React 入门儿",
        "createdAt": "2020.12.14",
        "editor": "Zero",
        "content": {
          "top": {
            "title": "🔥 本周置顶",
            "data": [
              {
                "name": "React 入门儿",
                "url": "https://mp.weixin.qq.com/s/OBE1dIF7QSgRuaAkwaFwxQ",
                "author": {
                  "platform": "微信",
                  "column": "凹凸实验室",
                  "person": "风魔小次郎"
                },
                "summary": "从原理层面探究 React 是如何工作的",
                "tags": [
                  "React",
                  "Fiber"
                ]
              }
            ]
          },
          "article": {
            "title": "📘 技术文章",
            "data": [
              {
                "name": "构建下一代 HTTP API",
                "url": "https://mp.weixin.qq.com/s/zf0GFgFrn2NLqOCe2mrRew",
                "author": {
                  "platform": "微信",
                  "column": "程序人生",
                  "person": "陈小天"
                },
                "summary": "全方位重新思考如何构建好的 API，包括设计友好、类型安全、数据模拟、接口安全、SDK 等",
                "tags": [
                  "API",
                  "OpenAPI"
                ]
              },
              {
                "name": "GraphQL是API的未来，但它并非银弹",
                "url": "https://mp.weixin.qq.com/s/ei5IgDc3j8ezt0tTAb-N3g",
                "author": {
                  "platform": "微信",
                  "column": "InfoQ",
                  "person": "平川（译）"
                },
                "summary": "从 8 个方面介绍了 GraphQL 相比与 RESTful 的优势",
                "tags": [
                  "GraphQL"
                ]
              },
              {
                "name": "腾讯文档 SSR 实践",
                "url": "https://mp.weixin.qq.com/s?__biz=MjM5ODYwMjI2MA==&mid=2649755178&idx=1&sn=a8aa5df01b4524890f0f044b8e3b8a38&scene=21#wechat_redirect",
                "author": {
                  "platform": "微信",
                  "column": "腾讯技术工程",
                  "person": "sigmaliu"
                },
                "summary": "不仅仅是 SSR，内容相当丰满，涉及 Node、React 组件、性能、网络、docker 镜像 、云上部署、灰度和发布等",
                "tags": [
                  "SSR"
                ]
              },
              {
                "name": "Chrome浏览器 Referrer-Policy 默认值变更",
                "url": "https://mp.weixin.qq.com/s/8-NgM-d3mbS2l710OqlRuw",
                "author": {
                  "platform": "微信",
                  "column": "前端早读课",
                  "person": "alibabaf2e"
                },
                "summary": "在Chrome 85中，有个很重要的变化：将Referrer-Policy默认值从no-referrer-when-downgrade改为strict-origin-when-cross-origin，它会对埋点、网站分析等功能造成影响。本文会详细介绍这个变化，文章分为以下几个部分：前置知识、变化原因、影响范围、处理方案。",
                "tags": [
                  "Chrome"
                ]
              }
            ]
          },
          "library": {
            "title": "🛠 工具类库",
            "data": [
              {
                "name": "kpc",
                "url": "https://github.com/ksc-fe/kpc",
                "description": "金山云企业级 UI 框架，同时支持 React、Vue、Angular",
                "language": "JavaScript",
                "tags": [
                  "组件库"
                ]
              },
              {
                "name": "wmr",
                "url": "https://github.com/preactjs/wmr",
                "description": "All-in-One 企业级前端应用开发工具",
                "language": "JavaScript",
                "tags": [
                  "开发工具"
                ]
              },
              {
                "name": "sql.js",
                "url": "https://github.com/sql-js/sql.js",
                "description": "在浏览器中操作 SQLite",
                "language": "JavaScript",
                "tags": [
                  "开发工具"
                ]
              },
              {
                "name": "budibase",
                "url": "https://github.com/Budibase/budibase",
                "description": "开源的 Low-Code 开发平台",
                "language": "JavaScript",
                "tags": [
                  "LowCode"
                ]
              },
              {
                "name": "useAuth",
                "url": "https://github.com/Swizec/useAuth",
                "description": "让第三方认证变得简单",
                "language": "TypeScript",
                "tags": [
                  "Auth"
                ]
              }
            ]
          }
        }
      }
    ]
  }
}